from sklearn.ensemble import ExtraTreesClassifier
from sklearn.datasets import load_iris
from sklearn.feature_selection import SelectFromModel
iris = load_iris()
X, y = iris.data, iris.target

clf = ExtraTreesClassifier()
clf = clf.fit(X, y)
clf.feature_importances_  
model = SelectFromModel(clf, prefit=True)
X_new = model.transform(X)


train_acc = np.sum(
...       y_train == y_train_pred, axis=0) / X_train.shape[0]
 

    '''
    clf = DecisionTreeClassifier(max_depth=None, min_samples_split=1, random_state=0)

    clf = RandomForestClassifier(n_estimators=10, max_depth=None,
         min_samples_split=1, random_state=0)

    clf = ExtraTreesClassifier(n_estimators=10, max_depth=None,
         min_samples_split=1, random_state=0)


    # Fit regression model

    params = {'n_estimators': 500, 'max_depth': 4, 'min_samples_split': 1,
              'learning_rate': 0.01, 'loss': 'ls'}
    clf = GradientBoostingRegressor(**params)
    crossValidation(clf, X, Y)


    

    rfc = RandomForestClassifier()
    clf = GridSearchCV(rfc,
                       {'n_estimators': [10, 50, 100, 200, 300, 400, 500, 1000, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 2000]}, verbose=1)
    clf.fit(X,Y)
    print ("RandomForestClassifier")
    print(clf.best_score_)
    print(clf.best_params_)


    etc = ExtraTreesClassifier()
    clf = GridSearchCV(etc,
                       {'n_estimators': [10, 50, 100, 200, 300, 400, 500]}, verbose=1)
    clf.fit(X,Y)
    print ("ExtraTreesClassifier")
    print(clf.best_score_)
    print(clf.best_params_)

    rfc = RandomForestClassifier(n_estimators= 1000)  
    crossValidation(rfc, X, Y)

    xlist = selectFeatures (clf, X, Y)
    clf = MultinomialNB()
    xlist = selectFeatures (clf, X, Y)
    params = {'n_estimators': 500, 'max_depth': 4, 'min_samples_split': 1,
              'learning_rate': 0.01, 'loss': 'ls'}
    clf = GradientBoostingRegressor(**params)
    crossValidation(clf, X, Y)
    ''' 
    rfc = RandomForestClassifier(n_estimators= 1000)  
    #crossValidation(rfc, X, Y)
    print Y

